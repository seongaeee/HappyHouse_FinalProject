9조 프로젝트 구현 명세 (임성애, 정물결)

0) Controller 기반 구조
 0-1. BoardController : MVC 구조 / 전체 게시물 조회, 게시물 상세 조회, 게시물 등록, 게시물 수정, 게시물 삭제

1) 기본 기능 - Springboot
 1-1. 메인 페이지 : BoardController에서 "/board" 맵핑으로 QNA 페이지 접속하도록 구현
 
2) 기본 기능 - Vue
 2-1. Header : 
    전체 게시물 목록 페이지 연결(router-link)
 2-2. 전체 게시물 목록 페이지 : 
    2-2-1. 전체 게시물 목록을 store.dispatch을 통한 axios로 비동기 처리로 받기
   2-2-2. 게시물을 클릭하면 router를 이용하여 게시물 상세 조회 페이지로 연결
   2-2-3. 글쓰기를 클릭하면 router를 이용하여 글쓰기 페이지로 연결
 2-3. 게시물 상세 조회 페이지
    2-3-1. 게시물 상세 조회를 store.dispatch을 통한 axios로 비동기 처리로 받기
    2-3-2. 수정하기을 클릭하면 router를 이용하여 수정 페이지로 연결
    2-3-3. 삭제하기을 클릭하면 store.dispatch를 통해 게시물 삭제
 2-4. 등록 & 수정 페이지
    2-4-1. url에 따라 route.params을 통해 알아낸 parameter가 없으면 등록 기능 설정, 있으면 수정 기능 설정
    2-4-2. 등록하기을 클릭하면 store.dispatch를 통해 게시물 등록
   2-4-3. 수정하기을 클릭하면 store.dispatch를 통해 게시물 수정
   
** 기타 문서에 제시된 내용 이외의 구현 사항이 있으면 적어 주세요.
** 추가 기능, 심화 기능은 없으면 안써도 됨
** DB 설정하기

1. DB 테이블 만들기
   1-1. table 이름 board
   1-2. table 속성
      no 번호
      title 제목
      content 내용
      id 아이디
      wdate 작성일
      count 조회수
```
use happyhouse;

CREATE TABLE `happyhouse`.`board` (
  `no` INT NOT NULL AUTO_INCREMENT,
  `id` VARCHAR(30) NOT NULL,
  `title` VARCHAR(45) NULL,
  `content` VARCHAR(100) NULL,
  `wdate` DATETIME NULL,
  `count` INT NULL,
  PRIMARY KEY (`no`));
```

2. table 데이터 넣기
```
insert into board values (null, 'seongae', '제목1', '내용1', curdate(), 0);
insert into board values (nu
```
insert into board values (null, 'seongae', '제목1', '내용1', curdate(), 0);
insert into board values (null, 'seongae', '제목2', '내용2', curdate(), 0);
insert into board values (null, 'seongae', '제목3', '내용3', curdate(), 0);
```